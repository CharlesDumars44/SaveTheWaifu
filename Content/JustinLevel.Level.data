Level = 
{
	Cog = 
	{
		LinkId = 
		{
			uint Id = 1,
		},
		Named = 
		{
			string Name = "LevelSettings",
		},
		GravityEffect = 
		{
			bool Active = true,
			bool WakeUpOnChange = false,
			bool LocalSpaceDirection = true,
			float Strength = 10,
			Vec3 Direction = [0, -1, 0],
		},
		DragEffect = 
		{
			bool Active = true,
			bool WakeUpOnChange = false,
			float Drag = 0.699999988,
			float AngularDrag = 0.100000001,
		},
		CameraViewport = 
		{
			bool Background = true,
			Vec2 Offset = [0, 0],
			Vec2 Size = [1, 1],
			int Layer = 0,
			bool Active = true,
			bool Blocking = true,
			CogPath Renderer = 
			{
				string Path = ".",
				bool ErrorOnResolveToNull = false,
				bool ErrorOnPathCantCompute = false,
				bool ErrorOnDirectLinkFail = false,
				bool UpdateCogOnPathChange = true,
				bool UpdatePathOnCogChange = true,
				bool UpdateCogOnInitialize = true,
				bool ResolvedNullErrorOccurred = false,
				uint ResolvedCog = 1,
				CogPathPreference PathPreference0 = CogRelative,
				CogPathPreference PathPreference1 = SpaceRelative,
				CogPathPreference PathPreference2 = Absolute,
			},
			CogPath Camera = 
			{
				string Path = ":/Camera",
				bool ErrorOnResolveToNull = false,
				bool ErrorOnPathCantCompute = false,
				bool ErrorOnDirectLinkFail = false,
				bool UpdateCogOnPathChange = true,
				bool UpdatePathOnCogChange = true,
				bool UpdateCogOnInitialize = true,
				bool ResolvedNullErrorOccurred = false,
				uint ResolvedCog = 2,
				CogPathPreference PathPreference0 = CogRelative,
				CogPathPreference PathPreference1 = SpaceRelative,
				CogPathPreference PathPreference2 = Absolute,
			},
			ViewportScaling Scaling = Letterbox,
			Vec2 Resolution = [1280, 720],
			Vec4 MarginColor = [0, 0, 0, 1],
		},
		ForwardRenderer = 
		{
			Vec4 ClearColor = [0.155000001, 0.155000001, 0.155000001, 1],
			bool DrawNonVisible = false,
			bool DrawDebugObjects = true,
			bool DrawEditorIcons = true,
			bool EditorIconDepth = true,
			bool Wireframe = false,
		},
		GridDraw = 
		{
			bool Active = true,
			bool HalfCellOffset = false,
			float CellSize = 1,
			GridAxis Axis = ZAxis,
			int Lines = 100,
			bool DrawAxisOrigins = true,
			bool AlwaysDrawInEditor = true,
			bool DrawInGame = false,
			Vec4 GridColor = [0.5, 0.5, 0.5, 0.400000006],
			Vec4 GridHiLight = [0, 0, 0, 0.400000006],
			int HilightInterval = 10,
			bool FollowEditorCamera = false,
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 3,
		},
		Named = 
		{
			string Name = "EditorCamera",
		},
		Transform = 
		{
			Vec3 Translation = [17.5449944, -4.75621319, 50],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [-0, -1.09278471e-08, 0, 1],
		},
		Camera = 
		{
			ProjectionMode ProjectionMode = Orthographic,
			Facing Facing = NegativeZ,
			CameraTransparentSort TransparentSort = ZDepth,
			float FieldOfView = 45,
			float NearPlane = 0.5,
			float FarPlane = 500,
			float Size = 90.4838409,
		},
		EditorCameraController = 
		{
			ControlMode ControlMode = ZPlane,
			float LookDistance = 50,
			float VerticalAngle = 0,
			float HorizontalAngle = 0,
			Vec3 LookTarget = [17.5449944, -4.75621319, 6.13925693e-07],
			float MoveSensitivity = 1,
		},
		EditorRenderer = 
		{
			Vec4 ClearColor = [0.155000001, 0.155000001, 0.155000001, 1],
			bool DrawNonVisible = true,
			bool DrawDebugObjects = true,
			bool DrawEditorIcons = true,
			bool Wireframe = false,
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 2,
		},
		Named = 
		{
			string Name = "Camera",
		},
		Transform = 
		{
			Vec3 Translation = [0, 0, 40],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Camera = 
		{
			ProjectionMode ProjectionMode = Orthographic,
			Facing Facing = NegativeZ,
			CameraTransparentSort TransparentSort = InheritFromSpace,
			float FieldOfView = 45,
			float NearPlane = 0.5,
			float FarPlane = 200,
			float Size = 20,
		},
		SoundListener = 
		{
			bool Active = true,
			float Volume = 1,
		},
		FollowObject = 
		{
			bool Active = true,
			CogPath ObjectToFollow = 
			{
				string Path = ":/Player",
				bool ErrorOnResolveToNull = false,
				bool ErrorOnPathCantCompute = false,
				bool ErrorOnDirectLinkFail = false,
				bool UpdateCogOnPathChange = true,
				bool UpdatePathOnCogChange = true,
				bool UpdateCogOnInitialize = true,
				bool ResolvedNullErrorOccurred = false,
				uint ResolvedCog = 4,
				CogPathPreference PathPreference0 = CogRelative,
				CogPathPreference PathPreference1 = SpaceRelative,
				CogPathPreference PathPreference2 = Absolute,
			},
			Vec3 Displacement = [0, 0, 40],
		},
		CreateFloor = 
		{
			string Floor = "5921bb359f953924:ForestGround",
			CogPath FirstFloor = 
			{
				string Path = ":/Ground",
				bool ErrorOnResolveToNull = false,
				bool ErrorOnPathCantCompute = false,
				bool ErrorOnDirectLinkFail = false,
				bool UpdateCogOnPathChange = true,
				bool UpdatePathOnCogChange = true,
				bool UpdateCogOnInitialize = true,
				bool ResolvedNullErrorOccurred = false,
				uint ResolvedCog = 5,
				CogPathPreference PathPreference0 = CogRelative,
				CogPathPreference PathPreference1 = SpaceRelative,
				CogPathPreference PathPreference2 = Absolute,
			},
		},
		Hierarchy = 
		{
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 6,
		},
		Named = 
		{
			string Name = "ObstacleSpawner",
		},
		Transform = 
		{
			Vec3 Translation = [18.5, -4, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = true,
			bool CastShadows = false,
			Vec4 Color = [1, 1, 1, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "5275aa4d802dd6dc:Square",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		ObstacleSpawner = 
		{
			int Obstacle1Chance = 3,
			int Obstacle2Chance = 3,
			int Obstacle3Chance = 3,
			bool Active = true,
		},
		FollowObstacle = 
		{
			bool Active = true,
			CogPath ObjectToFollow = 
			{
				string Path = ":/Player",
				bool ErrorOnResolveToNull = false,
				bool ErrorOnPathCantCompute = false,
				bool ErrorOnDirectLinkFail = false,
				bool UpdateCogOnPathChange = true,
				bool UpdatePathOnCogChange = true,
				bool UpdateCogOnInitialize = true,
				bool ResolvedNullErrorOccurred = false,
				uint ResolvedCog = 4,
				CogPathPreference PathPreference0 = CogRelative,
				CogPathPreference PathPreference1 = SpaceRelative,
				CogPathPreference PathPreference2 = Absolute,
			},
			Vec3 Displacement = [18.5, 0, 0],
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 4,
		},
		Named = 
		{
			string Name = "Player",
		},
		Transform = 
		{
			Vec3 Translation = [-1.5, -3.5, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = true,
			bool CastShadows = false,
			Vec4 Color = [0.328999996, 0.939999998, 0.83002013, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "5275aa4d802dd6dc:Square",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		RigidBody = 
		{
			bool Static = false,
			bool Asleep = false,
			bool Kinematic = false,
			bool RotationLocked = true,
			bool Mode2D = true,
			bool AllowSleep = true,
			bool Inherit2DMode = true,
			Vec3 Velocity = [0, 0, 0],
			Vec3 AngularVelocity = [0, 0, 0],
		},
		CapsuleCollider = 
		{
			bool Ghost = false,
			bool SendsMessages = true,
			bool Seamless = true,
			string MaterialName = "592075b17e9a6956:NoFriction",
			string SerializedGroupName = "4e740859314e5515:DefaultGroup",
			Vec3 Offset = [0, 0, 0],
			float Radius = 0.5,
			float Height = 1.5,
			AxisDirection Direction = Y,
			CapsuleScalingMode ScalingMode = PreserveScale,
		},
		Fissix = 
		{
			float Acceleration = 4,
			float Friction = 15,
			float Drag = 3,
			float MaxGroundVelocity = 20,
			float MaxAirVelocity = 20,
			float JumpStrength = 10,
		},
		PlayerController = 
		{
		},
		IgnoreSpaceEffects = 
		{
			bool Drag = true,
			bool Flow = false,
			bool Force = false,
			bool Gravity = false,
			bool Thrust = false,
			bool Vortex = false,
			bool Wind = false,
			bool Invalid = false,
			bool Torque = false,
			bool PointGravity = false,
			bool PointForce = false,
			bool Buoyancy = false,
			bool Custom = false,
		},
		Hierarchy = 
		{
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 7,
		},
		Named = 
		{
			string Name = "Tree",
		},
		Transform = 
		{
			Vec3 Translation = [0, 0, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = true,
			bool CastShadows = false,
			Vec4 Color = [0.61500001, 0.196799994, 0.196799994, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "5275aa4d802dd6dc:Square",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		RigidBody = 
		{
			bool Static = true,
			bool Asleep = false,
			bool Kinematic = false,
			bool RotationLocked = false,
			bool Mode2D = true,
			bool AllowSleep = true,
			bool Inherit2DMode = true,
			Vec3 Velocity = [0, 0, 0],
			Vec3 AngularVelocity = [0, 0, 0],
		},
		Area = 
		{
			Vec2 Size = [1, 10],
			Location Origin = Center,
		},
		ColorFlash = 
		{
			Vec4 Color = [0, 1, 0, 1],
			float FlashTransitionTime = 0,
			float FlashDelayMin = 0.0500000007,
			float FlashDelayMax = 0.300000012,
		},
		Hierarchy = 
		{
			Cog = 
			{
				LinkId = 
				{
					uint Id = 8,
				},
				Named = 
				{
					string Name = "TreeCollider",
				},
				Archetyped = 
				{
					string Name = "5920735bf0a34f22:TreeCollider",
				},
				Transform = 
				{
					Vec3 Translation = [-2.5, 4, 0],
					Vec3 Scale = [1, 1, 1],
					Quat Rotation = [0, 0, 0, 1],
				},
				Sprite = 
				{
					bool Visible = true,
					bool VisibilityCulling = true,
					bool VisibilityEvents = true,
					bool CastShadows = false,
					Vec4 Color = [1, 1, 1, 0.5],
					BlendMode BlendMode = Alpha,
					SpriteGeometryMode GeometryMode = ZPlane,
					string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
					string SpriteSource = "5275aa4d802dd6dc:Square",
					bool RenderMask = false,
					bool FlipX = false,
					bool FlipY = false,
					bool AnimationActive = true,
					float AnimationSpeed = 1,
					uint StartFrame = 0,
				},
				RigidBody = 
				{
					bool Static = false,
					bool Asleep = false,
					bool Kinematic = true,
					bool RotationLocked = false,
					bool Mode2D = true,
					bool AllowSleep = true,
					bool Inherit2DMode = true,
					Vec3 Velocity = [-312.499969, 0, 0],
					Vec3 AngularVelocity = [0, 0, 0],
				},
				BoxCollider = 
				{
					bool Ghost = false,
					bool SendsMessages = true,
					bool Seamless = true,
					string MaterialName = "4de020863e872da8:DefaultPhysicsMaterial",
					string SerializedGroupName = "4e740859314e5515:DefaultGroup",
					Vec3 Offset = [0, -0.100000001, 0],
					Vec3 Size = [0.5, 1, 0.5],
				},
				Area = 
				{
					Vec2 Size = [1, 2],
					Location Origin = Center,
				},
				TreeFallCollide = 
				{
					Vec3 Move = [0, -8, 0],
					float MoveTime = 0.5,
				},
			},
		},
	},
	Cog = 
	{
		LinkId = 
		{
			uint Id = 9,
		},
		Named = 
		{
			string Name = "Landslide",
		},
		Transform = 
		{
			Vec3 Translation = [-11.5, 0.5, 0],
			Vec3 Scale = [5, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Sprite = 
		{
			bool Visible = true,
			bool VisibilityCulling = true,
			bool VisibilityEvents = true,
			bool CastShadows = false,
			Vec4 Color = [0.75999999, 0.431983918, 0.129199982, 1],
			BlendMode BlendMode = Alpha,
			SpriteGeometryMode GeometryMode = ZPlane,
			string SpriteLayer = "52ad5fa30d7fcd50:DefaultSpriteLayer",
			string SpriteSource = "5275aa4d802dd6dc:Square",
			bool RenderMask = false,
			bool FlipX = false,
			bool FlipY = false,
			bool AnimationActive = true,
			float AnimationSpeed = 1,
			uint StartFrame = 0,
		},
		RigidBody = 
		{
			bool Static = true,
			bool Asleep = false,
			bool Kinematic = false,
			bool RotationLocked = false,
			bool Mode2D = true,
			bool AllowSleep = true,
			bool Inherit2DMode = true,
			Vec3 Velocity = [0, 0, 0],
			Vec3 AngularVelocity = [0, 0, 0],
		},
		BoxCollider = 
		{
			bool Ghost = false,
			bool SendsMessages = true,
			bool Seamless = true,
			string MaterialName = "4de020863e872da8:DefaultPhysicsMaterial",
			string SerializedGroupName = "4e740859314e5515:DefaultGroup",
			Vec3 Offset = [0, 0, 0],
			Vec3 Size = [0.5, 0.5, 0.5],
		},
		Landslide = 
		{
			Vec3 Move = [5, -5, 0],
			float MoveTime = 1,
		},
		TrackDistance = 
		{
		},
	},
	ArchetypeInstance = 
	{
		string Name = "5920880a870b083b:Obstacle1",
		LinkId = 
		{
			uint Id = 10,
		},
		Transform = 
		{
			Vec3 Translation = [6.5, -4, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Named = 
		{
			string Name = "Rock",
		},
	},
	ArchetypeInstance = 
	{
		string Name = "5920880d8601aa17:Obstacle2",
		LinkId = 
		{
			uint Id = 11,
		},
		Transform = 
		{
			Vec3 Translation = [8, 8, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Named = 
		{
			string Name = "Obstacle2",
		},
	},
	ArchetypeInstance = 
	{
		string Name = "5920880185660263:Obstacle3",
		LinkId = 
		{
			uint Id = 12,
		},
		Transform = 
		{
			Vec3 Translation = [9.5, 8, 0],
			Vec3 Scale = [1, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Named = 
		{
			string Name = "Obstacle3",
		},
	},
	ArchetypeInstance = 
	{
		string Name = "5921bb359f953924:ForestGround",
		LinkId = 
		{
			uint Id = 5,
		},
		Transform = 
		{
			Vec3 Translation = [12.5, -5.5, 0],
			Vec3 Scale = [48, 1, 1],
			Quat Rotation = [0, 0, 0, 1],
		},
		Named = 
		{
			string Name = "Ground",
		},
	},
},
